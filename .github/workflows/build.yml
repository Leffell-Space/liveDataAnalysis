name: Build Python and Release Executable
on:
  push:
    branches: [ main ]
  pull_request:
permissions:
  contents: write
  pull-requests: write
jobs:
  build-multi-platform:
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
        include:
          - os: windows-latest
            artifact_name: get_from_direwolf-windows.exe
            asset_name: get_from_direwolf.exe
          - os: ubuntu-latest
            artifact_name: get_from_direwolf-linux
            asset_name: get_from_direwolf-linux
          - os: macos-latest
            artifact_name: get_from_direwolf-macos
            asset_name: get_from_direwolf-macos
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'
          architecture: 'x64'
      - name: Install requirements
        run: |
          pip install -r src/requirements.txt
          pip install pyinstaller
      - name: Run PyInstaller (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          python -m PyInstaller --onefile --name get_from_direwolf src/get_from_direwolf.py
      - name: Run PyInstaller (Unix)
        if: matrix.os != 'windows-latest'
        run: |
          python -m PyInstaller --onefile --name get_from_direwolf src/get_from_direwolf.py
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact_name }}
          path: dist/get_from_direwolf${{ matrix.os == 'windows-latest' && '.exe' || '' }}
  release:
    needs: build-multi-platform
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: release-assets
      - name: Reorganize files for release
        run: |
          # Move files to the expected locations for the release with proper naming
          mkdir -p release-files
          cp release-assets/get_from_direwolf-windows.exe/get_from_direwolf.exe release-files/get_from_direwolf-windows.exe
          cp release-assets/get_from_direwolf-linux/get_from_direwolf release-files/get_from_direwolf-linux
          cp release-assets/get_from_direwolf-macos/get_from_direwolf release-files/get_from_direwolf-macos
          echo "Reorganized files:"
          ls -la release-files/
      - name: Get current date
        id: date
        run: echo "date=$(date +'%Y-%m-%d')" >> $GITHUB_ENV
      - name: Checkout
        uses: actions/checkout@v4
      - name: Get merged PR for the commit
        id: get_pr
        run: |
          PR_BODY=$(gh pr view ${{ github.sha }} --json body -q '.body' || echo "")
          echo "PR_BODY<<EOF" >> $GITHUB_ENV
          echo "$PR_BODY" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Generate release tag
        id: tag
        run: |
          TAG="v$(date +'%Y.%m.%d')-$(echo ${{ github.sha }} | cut -c1-7)"
          echo "tag=$TAG" >> $GITHUB_ENV
          echo "Generated tag: $TAG"
      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.tag }}
          name: "Release ${{ env.tag }}"
          body: |
            ## Release Notes
            **Built from commit:** ${{ github.sha }}
            **Build date:** ${{ env.date }}
            ### Changes
            ${{ env.PR_BODY }}
            ### Files
            - `get_from_direwolf-windows.exe` - Windows executable
            - `get_from_direwolf-linux` - Linux executable
            - `get_from_direwolf-macos` - macOS executable
            ### Usage
            1. Download the appropriate executable for your platform
            2. Run from command line or double-click to execute (Windows)
            3. On Unix systems, you may need to make executable: `chmod +x get_from_direwolf-*`
          files: |
            release-files/get_from_direwolf-windows.exe
            release-files/get_from_direwolf-linux
            release-files/get_from_direwolf-macos
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
